!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).getDeclension=t()}(this,function(){"use strict";function e(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function t(e){return null!==e&&"object"==typeof e&&!1===Array.isArray(e)}function o(t){var o=t.optionConfig,i=t.userOptions,n=void 0===i?{}:i,r=t.preffix,f=void 0===r?"":r,a=t.suffix,u=void 0===a?"":a,d=t.strict,p=void 0===d||d,c=function(e){return[f,e,u].join(" ")},s={};for(var l in o)if(e(o,l)){var g=o[l],v=g.required,y=g.default,b=g.description,h=g.validator,x=n[l],q=!!e(g,"required")&&("function"==typeof v?v(n):v),m=e(n,l),w=h(x,n);if(q){if(!m)throw new TypeError(c(l+" is required."));if(!w)throw new TypeError(c("Expected "+l+" to be "+b+", got "+typeof x+" "+x+"."));s[l]=x}else if(s[l]=y,m)if(w)s[l]=x;else{if(p)throw new TypeError(c("Expected "+l+" to be "+b+", got "+typeof x+" "+x+"."));console.warn(c("Expected "+l+" to be "+b+", got "+typeof x+" "+x+". Fallback to default value "+y+"."))}}return s}var i="[mergeOptions]:",n="\nCheck out documentation https://github.com/dubaua/merge-options#parameters-and-return";function r(e){throw new TypeError([i,e,n].join(" "))}var f={optionConfig:{required:!0,validator:function(o){for(var i in o)if(e(o,i)){var n=o[i];if(t(n)||r("Expected optionConfig."+i+" to be an object with declarative option configuration, got "+typeof n+" "+n+"."),e(n,"required")){var f=n.required,a=typeof f;"boolean"!==a&&"function"!==a&&r("Expected optionConfig."+i+".required to be either boolean or function, got "+typeof f+" "+f+".")}else e(n,"default")||r("Expected optionConfig."+i+" to either have required or default value.");if(e(n,"default")||e(n,"required")||r("Expected optionConfig."+i+" to either have required or default value."),e(n,"description")){var u=n.description;"string"!=typeof n.description&&r("Expected optionConfig."+i+".description to be a string, got "+typeof u+" "+u+".")}else r("Missing description on optionConfig."+i+" config.");if(e(n,"validator")){var d=n.validator;"function"!=typeof n.validator&&r("Expected optionConfig."+i+".validator to be a function, got "+typeof d+" "+d+".")}else r("Missing validator on optionConfig."+i+" config.")}return t(o)},description:"an object with declarative option configuration"},userOptions:{required:!1,default:{},validator:t,description:"an object"},preffix:{required:!1,default:"",validator:function(e){return"string"==typeof e},description:"a string"},suffix:{required:!1,default:"",validator:function(e){return"string"==typeof e},description:"a string"},strict:{required:!1,default:!0,validator:function(e){return"boolean"==typeof e},description:"a boolean"}},a={count:{required:!0,validator:function(e){return"number"==typeof e&&isFinite(e)},description:"a finite number"},one:{required:!0,validator:function(e){return"string"==typeof e},description:"a string"},few:{required:!0,validator:function(e){return"string"==typeof e},description:"a string"},many:{required:!0,validator:function(e){return"string"==typeof e},description:"a string"}};return function(e){var t=function(e){var t=o({optionConfig:f,userOptions:e,preffix:i,suffix:n});return o(t)}({optionConfig:a,userOptions:e,preffix:"[getDeclension]:",suffix:"\nCheck out documentation https://github.com/dubaua/get-declension"}),r=t.count,u=t.one,d=t.few,p=t.many;if(Math.round(r)!==r)p=d;else{var c=Math.abs(r%10),s=Math.abs(r%100);1===c&&11!==s?p=u:2<=c&&c<=4&&(s<10||20<=s)&&(p=d)}return r+" "+p}});
//# sourceMappingURL=get-declension.min.umd.js.map
